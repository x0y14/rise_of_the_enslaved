roe_character_setup_slave_owner_effect = {
    if = {
        limit = { roe_character_has_valid_slave_token_variables_trigger = no }
        if = {
            limit = { NOT = { has_variable = roe_african_slave_token } }
            set_variable = {
                name = roe_african_slave_token
                value = 0
            }
        }
        if = {
            limit = { NOT = { has_variable = roe_slavic_slave_token } }
            set_variable = {
                name = roe_slavic_slave_token
                value = 0
            }
        }
        if = {
            limit = { NOT = { has_variable = roe_turkic_slave_token } }
            set_variable = {
                name = roe_turkic_slave_token
                value = 0
            }
        }
        if = {
            limit = { NOT = { has_variable = roe_various_slave_token } }
            set_variable = {
                name = roe_various_slave_token
                value = 0
            }
        }
    }
    if = {
        limit = { NOT = { has_trait = roe_slave_owner } }
        add_trait = roe_slave_owner_only_own
    }
}

# ROOT: character
# PARAMS:
#   AFRICAN_SLAVE_TOKEN: int
#   SLAVIC_SLAVE_TOKEN: int
#   TURKIC_SLAVE_TOKEN: int
#   VARIOUS_SLAVE_TOKEN: int
roe_character_store_slave_token_effect = {
    if = {
        limit = { roe_character_is_valid_slave_owner_trigger = yes }
        change_variable = {
            name = roe_african_slave_token
            add = $AFRICAN_SLAVE_TOKEN$
        }
        change_variable = {
            name = roe_slavic_slave_token
            add = $SLAVIC_SLAVE_TOKEN$
        }
        change_variable = {
            name = roe_turkic_slave_token
            add = $TURKIC_SLAVE_TOKEN$
        }
        change_variable = {
            name = roe_various_slave_token
            add = $VARIOUS_SLAVE_TOKEN$
        }
    }
}

# ROOT: character
# Return Scopes:
#   RETURN_AFRICAN_SLAVE_TOKEN
#   RETURN_SLAVIC_SLAVE_TOKEN
#   RETURN_TURKIC_SLAVE_TOKEN
#   RETURN_VARIOUS_SLAVE_TOKEN
roe_character_takeout_all_slave_token_effect = {
    if = {
        limit = {
            # is valid owner?
            roe_character_is_valid_slave_owner_trigger = yes
            # total >= 1?
            roe_character_has_more_than_or_equal_1_slave_token_trigger = yes
        }
        # takeout
        ## african
        save_scope_value_as = {
            name = RETURN_AFRICAN_SLAVE_TOKEN
            value = var:roe_african_slave_token
        }
        change_variable = {
            name = roe_african_slave_token
            subtract = scope:RETURN_AFRICAN_SLAVE_TOKEN
        }
        ## slavic
        save_scope_value_as = {
            name = RETURN_SLAVIC_SLAVE_TOKEN
            value = var:roe_slavic_slave_token
        }
        change_variable = {
            name = roe_slavic_slave_token
            subtract = scope:RETURN_SLAVIC_SLAVE_TOKEN
        }
        ## turkic
        save_scope_value_as = {
            name = RETURN_TURKIC_SLAVE_TOKEN
            value = var:roe_turkic_slave_token
        }
        change_variable = {
            name = roe_turkic_slave_token
            subtract = scope:RETURN_TURKIC_SLAVE_TOKEN
        }
        ## various
        save_scope_value_as = {
            name = RETURN_VARIOUS_SLAVE_TOKEN
            value = var:roe_various_slave_token
        }
        change_variable = {
            name = roe_various_slave_token
            subtract = scope:RETURN_VARIOUS_SLAVE_TOKEN
        }
    }
    # tokenがなくなったら消す, ただの所有者の場合のみ!
    if = {
        limit = {
            roe_character_has_total_0_slave_token_with_count_trigger = yes
            roe_character_is_master_of_slave_soldiers_trigger = no
        }
        roe_character_remove_slave_owner_trait_and_variables_effect = yes
    }
}

# ROOT: character
# PARAMS:
#   MAX_AFRICAN_TOKEN: int
#   MAX_SLAVIC_TOKEN: int
#   MAX_TURKIC_TOKEN: int
#   MAX_VARIOUS_TOKEN: int
# Return Scopes:
#   RETURN_AFRICAN_SLAVE_TOKEN
#   RETURN_SLAVIC_SLAVE_TOKEN
#   RETURN_TURKIC_SLAVE_TOKEN
#   RETURN_VARIOUS_SLAVE_TOKEN
roe_character_takeout_slave_token_with_limit_effect = {
    if = {
        limit = {
            # is valid owner?
            roe_character_is_valid_slave_owner_trigger = yes
            # total >= 1?
            roe_character_has_more_than_or_equal_1_slave_token_trigger = yes
            # param check
            $MAX_AFRICAN_TOKEN$ >= 0
            $MAX_SLAVIC_TOKEN$ >= 0
            $MAX_TURKIC_TOKEN$ >= 0
            $MAX_VARIOUS_TOKEN$ >= 0
            # MAXの合計が0より大きいこと
            save_temporary_scope_value_as = {
                name = total_max
                value = {
                    value = 0
                    add = $MAX_AFRICAN_TOKEN$
                    add = $MAX_SLAVIC_TOKEN$
                    add = $MAX_TURKIC_TOKEN$
                    add = $MAX_VARIOUS_TOKEN$
                }
            }
            scope:total_max > 0
        }
        # 実際の取り出し
        # AFRICAN
        if = {
            limit = {
                # 取り出しを希望している
                $MAX_AFRICAN_TOKEN$ > 0
                # 貯蔵がある
                var:roe_african_slave_token > 0
            }
            # 取り出し予定
            set_local_variable = {
                name = takeout_african_token
                value = 0
            }
            # 貯蔵より取り出し希望が大きい場合
            if = {
                limit = { $MAX_AFRICAN_TOKEN$ > var:roe_african_slave_token }
                # 貯蔵されている分だけ取り出す
                change_local_variable = {
                    name = takeout_african_token
                    add = var:roe_african_slave_token
                }
            }
            # 取り出し希望と同数以上が貯蔵されてる場合
            else = {
                # 希望する分だけ取り出す
                change_local_variable = {
                    name = takeout_african_token
                    add = $MAX_AFRICAN_TOKEN$
                }
            }
            if = {
                limit = { local_var:takeout_african_token >= 0 }
                save_scope_value_as = {
                    name = RETURN_AFRICAN_SLAVE_TOKEN
                    value = local_var:takeout_african_token
                }
                change_variable = {
                    name = roe_african_slave_token
                    subtract = local_var:takeout_african_token
                }
            }
        }
        # SLAVIC
        if = {
            limit = {
                $MAX_SLAVIC_TOKEN$ > 0
                var:roe_slavic_slave_token > 0
            }
            set_local_variable = {
                name = takeout_slavic_token
                value = 0
            }
            if = {
                limit = { $MAX_SLAVIC_TOKEN$ > var:roe_slavic_slave_token }
                change_local_variable = {
                    name = takeout_slavic_token
                    add = var:roe_slavic_slave_token
                }
            }
            else = {
                change_local_variable = {
                    name = takeout_slavic_token
                    add = $MAX_SLAVIC_TOKEN$
                }
            }
            if = {
                limit = { local_var:takeout_slavic_token >= 0 }
                save_scope_value_as = {
                    name = RETURN_SLAVIC_SLAVE_TOKEN
                    value = local_var:takeout_slavic_token
                }
                change_variable = {
                    name = roe_slavic_slave_token
                    subtract = local_var:takeout_slavic_token
                }
            }
        }
        # TURKIC
        if = {
            limit = {
                $MAX_TURKIC_TOKEN$ > 0
                var:roe_turkic_slave_token > 0
            }
            set_local_variable = {
                name = takeout_turkic_token
                value = 0
            }
            if = {
                limit = { $MAX_TURKIC_TOKEN$ > var:roe_turkic_slave_token }
                change_local_variable = {
                    name = takeout_turkic_token
                    add = var:roe_turkic_slave_token
                }
            }
            else = {
                change_local_variable = {
                    name = takeout_turkic_token
                    add = $MAX_TURKIC_TOKEN$
                }
            }
            if = {
                limit = { local_var:takeout_turkic_token >= 0 }
                save_scope_value_as = {
                    name = RETURN_TURKIC_SLAVE_TOKEN
                    value = local_var:takeout_turkic_token
                }
                change_variable = {
                    name = roe_turkic_slave_token
                    subtract = local_var:takeout_turkic_token
                }
            }
        }
        # VARIOUS
        if = {
            limit = {
                $MAX_VARIOUS_TOKEN$ > 0
                var:roe_various_slave_token > 0
            }
            set_local_variable = {
                name = takeout_various_token
                value = 0
            }
            if = {
                limit = { $MAX_VARIOUS_TOKEN$ > var:roe_various_slave_token }
                change_local_variable = {
                    name = takeout_various_token
                    add = var:roe_various_slave_token
                }
            }
            else = {
                change_local_variable = {
                    name = takeout_various_token
                    add = $MAX_VARIOUS_TOKEN$
                }
            }
            if = {
                limit = { local_var:takeout_various_token >= 0 }
                save_scope_value_as = {
                    name = RETURN_VARIOUS_SLAVE_TOKEN
                    value = local_var:takeout_various_token
                }
                change_variable = {
                    name = roe_various_slave_token
                    subtract = local_var:takeout_various_token
                }
            }
        }
        if = {
            limit = { NOT = { exists = scope:RETURN_AFRICAN_SLAVE_TOKEN } }
            save_scope_value_as = {
                name = RETURN_AFRICAN_SLAVE_TOKEN
                value = 0
            }
        }
        if = {
            limit = { NOT = { exists = scope:RETURN_SLAVIC_SLAVE_TOKEN } }
            save_scope_value_as = {
                name = RETURN_SLAVIC_SLAVE_TOKEN
                value = 0
            }
        }
        if = {
            limit = { NOT = { exists = scope:RETURN_TURKIC_SLAVE_TOKEN } }
            save_scope_value_as = {
                name = RETURN_TURKIC_SLAVE_TOKEN
                value = 0
            }
        }
        if = {
            limit = { NOT = { exists = scope:RETURN_VARIOUS_SLAVE_TOKEN } }
            save_scope_value_as = {
                name = RETURN_VARIOUS_SLAVE_TOKEN
                value = 0
            }
        }
        # tokenがなくなったら消す, ただの所有者である場合のみ!
        if = {
            limit = {
                roe_character_has_total_0_slave_token_with_count_trigger = yes
                roe_character_is_master_of_slave_soldiers_trigger = no
            }
            roe_character_remove_slave_owner_trait_and_variables_effect = yes
        }
    }
}

# PARAMS:
#   TERRITORY: flag
roe_character_make_territory_merchant_effect = {
    save_scope_as = new_merchant
    
    add_character_flag = ai_will_not_convert

    if = {
        limit = { NOT = { has_trait = roe_merchant } }
        add_trait = roe_merchant
    }
    set_variable = {
        name = roe_territory
        value = $TERRITORY$
    }
    if = {
        limit = { is_ruler = yes }
        depose = yes
    }
    create_landless_adventurer_title_effect = {
        REASON = flag:voluntary
        FLAVOR_CHAR = scope:new_merchant
    }
    add_realm_law_skip_effects = camp_purpose_explorers
    # set_variable = flavourise_camp_purpose_explorers
    create_story = roe_territory_merchant_story
}

roe_character_get_slave_market_counties_effect = {
    save_scope_as = char
    every_in_global_list = {
        variable = roe_global_slave_market_counties
        if = {
            limit = {
                exists = scope:char.var:roe_territory
                scope:char.var:roe_territory = flag:world_europe
                title_province = { geographical_region = world_europe }
            }
            add_to_list = return_slave_market_counties
        }
        else_if = {
            limit = {
                exists = scope:char.var:roe_territory
                scope:char.var:roe_territory = flag:world_asia_minor
                title_province = { geographical_region = world_asia_minor }
            }
            add_to_list = return_slave_market_counties
        }
        else_if = {
            limit = {
                exists = scope:char.var:roe_territory
                scope:char.var:roe_territory = flag:world_middle_east
                title_province = { geographical_region = world_middle_east }
            }
            add_to_list = return_slave_market_counties
        }
        else_if = {
            limit = {
                exists = scope:char.var:roe_territory
                scope:char.var:roe_territory = flag:world_india
                title_province = { geographical_region = world_india }
            }
            add_to_list = return_slave_market_counties
        }
        else_if = {
            limit = {
                exists = scope:char.var:roe_territory
                scope:char.var:roe_territory = flag:world_africa
                title_province = { geographical_region = world_africa }
            }
            add_to_list = return_slave_market_counties
        }
        else_if = {
            limit = {
                exists = scope:char.var:roe_territory
                scope:char.var:roe_territory = flag:world_steppe
                title_province = { geographical_region = world_steppe }
            }
            add_to_list = return_slave_market_counties
        }
        else_if = {
            limit = {
                exists = scope:char.var:roe_territory
                scope:char.var:roe_territory = flag:world_tibet
                title_province = { geographical_region = world_tibet }
            }
            add_to_list = return_slave_market_counties
        }
        else_if = {
            limit = {
                exists = scope:char.var:roe_territory
                scope:char.var:roe_territory = flag:world_burma
                title_province = { geographical_region = world_burma }
            }
            add_to_list = return_slave_market_counties
        }
    }
}

#
roe_character_remove_slave_owner_trait_and_variables_effect = {
    if = {
        limit = {
            roe_character_is_valid_slave_owner_trigger = yes
            roe_character_has_total_0_slave_token_with_count_trigger = yes
        }
        # check roe_slave_owner
        if = {
            limit = { has_trait = roe_slave_owner_only_own }
            remove_trait = roe_slave_owner_only_own
        }
        else_if = {
            limit = { has_trait = roe_master_of_slave_soldiers }
            remove_trait = roe_master_of_slave_soldiers
        }
        remove_variable = roe_african_slave_token
        remove_variable = roe_slavic_slave_token
        remove_variable = roe_turkic_slave_token
        remove_variable = roe_various_slave_token
    }
}

roe_character_change_slave_owner_to_master_effect = {
    if = {
        limit = { roe_character_is_valid_slave_owner_trigger = yes }
        set_trait_rank = {
            trait = roe_slave_owner
            rank = 2
        }
    }
}

# ROOT: character
# PARAMS:
#   VALUE: int
roe_character_army_declining_morale_effect = {
    if = {
        limit = {
            roe_character_is_valid_slave_owner_trigger = yes
            # roe_character_has_total_0_slave_token_with_count_trigger = yes
            roe_character_is_master_of_slave_soldiers_trigger = yes
        }
        add_trait_xp = {
            trait = roe_master_of_slave_soldiers
            track = regular_army
            value = $VALUE$
        }
    }
}

# ROOT: character
# PARAMS:
#   VALUE: int
roe_character_vassal_slaves_increase_clout_effect = {
    if = {
        limit = {
            any_vassal = {
                is_landed = yes
                highest_held_title_tier >= tier_county
                has_trait = roe_slave_soldier
            }
        }
        every_vassal = {
            limit = {
                is_landed = yes
                highest_held_title_tier >= tier_county
                has_trait = roe_slave_soldier
            }
            add_trait_xp = {
                trait = roe_slave_soldier
                track = clout
                value = $VALUE$
            }
        }
    }
}